<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gibong.web.dao.UserDao">
	 <resultMap type="com.gibong.web.model.User" id="userResultMap">
	 	<id column="USER_ID" property="userId" />
	 	<result column="USER_PWD" property="userPwd" />
	 	<result column="USER_PHONE" property="userPhone" />
	 	<result column="USER_EMAIL" property="userEmail" />
	 	<result column="USER_EMAIL_FLAG" property="userEmailFlag" />
	 	<result column="USER_NAME" property="userName" />
	 	<result column="USER_STATUS" property="userStatus" />
	 	<result column="USER_FLAG" property="userFlag" />
	 	<result column="USER_REGDATE" property="userRegdate" />
	 	<result column="USER_ZIPCODE" property="userZipcode" />
	 	<result column="USER_ADDR1" property="userAddr1" />
	 	<result column="USER_ADDR2" property="userAddr2" />
	 	<result column="MAIL_KEY" property="mailKey" />


 
 
 	</resultMap>
 <!-- 회원조회 -->
 	<select id="userSelect" parameterType="String" resultMap="userResultMap">
		SELECT
		    USER_ID,
		    NVL(USER_PWD,'') AS USER_PWD,
		     NVL(USER_PHONE,'') AS USER_PHONE,
		     NVL(USER_EMAIL,'') AS USER_EMAIL,
		     NVL(USER_EMAIL_FLAG,'N') AS USER_EMAIL_FLAG,
		     NVL(USER_NAME,'') AS USER_NAME,
		     NVL(USER_STATUS,'N') AS USER_STATUS,
		     NVL(USER_FLAG,'') AS USER_FLAG,
		     NVL(TO_CHAR(USER_REGDATE,'YYYY.MM.DD HH24:MI:SS'),'') AS USER_REGDATE,
		     NVL(USER_ZIPCODE,'') AS USER_ZIPCODE,
		     NVL(USER_ADDR1,'') AS USER_ADDR1,
		     NVL(USER_ADDR2,'') AS USER_ADDR2
		FROM
		    GIBONG_USER
		WHERE USER_ID = #{value}
 
 	</select>
 
 <!-- 회원가입 -->
 	<insert id="userInsert" parameterType="com.gibong.web.model.User">
		INSERT INTO GIBONG_USER(
		    USER_ID,
		    USER_PWD,
		    USER_PHONE,
		    USER_EMAIL,
		    USER_EMAIL_FLAG,
		    USER_NAME,
		    USER_STATUS,
		    USER_FLAG,
		    USER_REGDATE,
		    USER_ZIPCODE,
		    USER_ADDR1,
		    USER_ADDR2
		)VALUES(
		    #{userId},
		     #{userPwd},
		     #{userPhone},
		     #{userEmail},
		     #{userEmailFlag},
		     #{userName},
		     #{userStatus},
		     #{userFlag},
		     SYSDATE,
		     #{userZipcode},
		     #{userAddr1},
		     #{userAddr2}
		)

	</insert>

	<!-- 수정 -->
	<update id="userUpdate" parameterType="com.gibong.web.model.User">
		UPDATE GIBONG_USER
		SET USER_PWD=#{userPwd}, 
		    USER_EMAIL=#{userEmail},
		    USER_EMAIL_FLAG=#{userEmailFlag},
		    USER_NAME=#{userName},
		    USER_ZIPCODE=#{userZipcode},
		    USER_ADDR1 = #{userAddr1},
		    USER_ADDR2 = #{userAddr2}
	  WHERE USER_ID = #{userId}
	
	</update>
	
	<!-- 이메일 임시 비밀번호로 변경 -->
	<update id="updateImsiPwdKey" parameterType="com.gibong.web.model.User">
    	UPDATE GIBONG_USER 
    	   SET USER_PWD=#{userPwd}
    	 WHERE USER_EMAIL=#{userEmail} 
    	   AND USER_ID=#{userId}
	</update>
	
	
	<!-- 메일 인증 시 userEmailFlag값 1로 update  -->
 	<update id="updateMailFlag" parameterType="String">
        UPDATE GIBONG_USER 
           SET USER_EMAIL_FLAG = 1 
         WHERE USER_EMAIL= #{userEmail} 
         
	</update>

	<!-- 회원가입-메일인증-로그인시 메일인증 여부 확인 -->
	<select id="emailAuthFail" parameterType="String" resultType="long">
        SELECT COUNT(*) 
          FROM GIBONG_USER 
         WHERE USER_ID=#{userId}
           AND USER_EMAIL_FLAG='1'
	</select>
 
 	<!-- 아이디찾기 -->
 	<select id="findId" parameterType="com.gibong.web.model.User" resultType="String">
	 	SELECT USER_ID
		  FROM GIBONG_USER
		 WHERE USER_NAME=#{userName}
		   AND USER_EMAIL=#{userEmail}
 	</select>
 	
 	<!-- 비밀번호 찾기 (해당 유저가 존재하는지)-->
 	<select id="findPwdNameEmail" resultType="int">
		 SELECT COUNT(*) 
           FROM GIBONG_USER 
          WHERE USER_EMAIL = #{userEmail}
            AND USER_ID = #{userId}
	</select>
	
	<!-- 회원 탈퇴 -->
	<update id="userDelete" parameterType="String">
		UPDATE GIBONG_USER
		   SET USER_STATUS = 'N'
		 WHERE USER_ID = #{userId}
	</update>
	
 
 
  
</mapper>
